<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

    <http>
        <intercept-url pattern="/auth/login" access="isAnonymous()"/>
        <intercept-url pattern="/users" access="isAnonymous()"/>
        <intercept-url pattern="/css/**" access="permitAll()"/>
        <intercept-url pattern="/js/**" access="permitAll()"/>
        <intercept-url pattern="/images/**" access="permitAll()"/>
        <intercept-url pattern="/**" access="hasRole('USER')"/>
        <form-login login-page="/auth/login" default-target-url="/"/>
        <logout />
    </http>

    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="root" password=".=qwert12345" authorities="ROLE_USER, ROLE_ADMIN" />
                <user name="user2" password=".=qwert12345" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>
        <authentication-provider>
            <jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="SELECT username, password, enabled FROM wlogs_users WHERE username = ?"
                    authorities-by-username-query="SELECT username, role FROM wlogs_user_roles WHERE username=?"
            />
        </authentication-provider>
    </authentication-manager>
</beans:beans>